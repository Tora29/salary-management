# 🔐 Environment Configuration Template
# このファイルを .env にコピーして、実際の値を設定してください

# 🔑 Auth.js 認証設定
# セキュアな認証システムのための設定

# Auth.js 秘密鍵（必須）
# openssl rand -base64 32 で生成してください
AUTH_SECRET="your-super-secure-32-character-secret-key"

# Google OAuth 2.0 認証設定
# Google Cloud Console で OAuth 2.0 クライアント ID を作成してください
# https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# Google OAuth リダイレクト URI (本番環境では適切なドメインに変更)
# 開発環境: http://localhost:5173/auth/callback/google
# 本番環境: https://yourdomain.com/auth/callback/google

# 🗄️ データベース設定
# PostgreSQL データベースの接続情報

# 開発環境用 (Docker Compose 使用時)
DATABASE_URL="postgresql://postgres:password@localhost:5432/salary_management"

# 本番環境用 (例: Supabase, Neon, Railway など)
# DATABASE_URL="postgresql://username:password@db.example.com:5432/database_name"

# 📊 外部API設定
# 株価情報取得用の API キー

# Alpha Vantage API (株価データ)
# https://www.alphavantage.co/support/#api-key
ALPHA_VANTAGE_API_KEY="your-alpha-vantage-api-key"

# Yahoo Finance API (代替)
# YAHOO_FINANCE_API_KEY="your-yahoo-finance-api-key"

# 🚀 アプリケーション設定
# 本番環境では production に設定
NODE_ENV="development"

# アプリケーションのベース URL
# 開発環境
PUBLIC_BASE_URL="http://localhost:5173"
# 本番環境
# PUBLIC_BASE_URL="https://yourdomain.com"

# 💾 キャッシュ設定
# Redis キャッシュ (オプション)
# REDIS_URL="redis://localhost:6379"
# REDIS_PASSWORD="your-redis-password"

# 📧 メール設定 (将来の機能拡張用)
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT=587
# SMTP_USER="your-email@gmail.com"
# SMTP_PASSWORD="your-app-password"

# 🔒 セキュリティ設定
# CSP (Content Security Policy) 設定
CSP_REPORT_URI="https://yourdomain.report-uri.com/r/d/csp/enforce"

# Rate Limiting 設定
RATE_LIMIT_WINDOW_MS=900000  # 15分 (ミリ秒)
RATE_LIMIT_MAX_REQUESTS=100  # 最大リクエスト数

# 📝 ログ設定
LOG_LEVEL="info"  # debug, info, warn, error
LOG_FORMAT="json"  # json, pretty

# 🌐 Internationalization (i18n)
DEFAULT_LOCALE="ja-JP"
SUPPORTED_LOCALES="ja-JP,en-US"

# 💰 アプリケーション固有設定
# 給料明細PDFの最大ファイルサイズ (バイト)
MAX_PDF_SIZE="10485760"  # 10MB

# 株価更新の間隔 (秒)
STOCK_PRICE_UPDATE_INTERVAL="3600"  # 1時間

# 🧪 テスト環境設定 (開発者用)
# テストデータベース
TEST_DATABASE_URL="postgresql://postgres:password@localhost:5432/salary_management_test"

# テスト用シード
TEST_USER_EMAIL="test@example.com"
TEST_USER_NAME="テストユーザー"

# 📊 監視・分析設定 (オプション)
# Sentry エラー追跡
# SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# Google Analytics
# GA_TRACKING_ID="G-XXXXXXXXXX"

# 🔧 開発者ツール設定
# Prisma Studio のホスト
PRISMA_STUDIO_HOST="localhost"
PRISMA_STUDIO_PORT="5555"

# 📖 Setup Instructions:
# 1. このファイルを .env にコピー: cp .env.example .env
# 2. 各値を実際の値に置き換え
# 3. Google OAuth 設定:
#    a. Google Cloud Console にアクセス
#    b. 新しいプロジェクトを作成または選択
#    c. OAuth 2.0 認証情報を作成
#    d. リダイレクト URI を設定
# 4. データベース設定:
#    a. PostgreSQL をインストール、または
#    b. Docker Compose でローカル DB を起動: docker-compose up -d
# 5. 認証秘密鍵生成: openssl rand -base64 32
# 6. 環境変数をロード: source .env (または.envファイルを再読み込み)

# ⚠️ 重要な注意事項:
# - .env ファイルはGitにコミットしないでください
# - 本番環境では強力なパスワードと秘密鍵を使用してください
# - API キーは定期的にローテーションしてください
# - データベース接続情報は適切に保護してください