generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

// ユーザープロフィール
model Profile {
  id         String    @id @default(uuid()) @db.Uuid
  userId     String    @unique @map("user_id") @db.Uuid
  name       String?
  avatarUrl  String?   @map("avatar_url")
  bio        String?
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  
  salaries   Salary[]
  assets     Asset[]
  
  @@map("profiles")
}

// 給料情報
model Salary {
  id            String   @id @default(uuid()) @db.Uuid
  profileId     String   @map("profile_id") @db.Uuid
  yearMonth     String   @map("year_month") // YYYY-MM形式
  basicSalary   Decimal  @map("basic_salary") @db.Decimal(10, 2)
  overtime      Decimal  @default(0) @db.Decimal(10, 2)
  allowances    Decimal  @default(0) @db.Decimal(10, 2)
  deductions    Decimal  @default(0) @db.Decimal(10, 2)
  netSalary     Decimal  @map("net_salary") @db.Decimal(10, 2)
  pdfUrl        String?  @map("pdf_url")
  notes         String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  profile       Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  @@unique([profileId, yearMonth])
  @@map("salaries")
}

// 資産情報
model Asset {
  id            String   @id @default(uuid()) @db.Uuid
  profileId     String   @map("profile_id") @db.Uuid
  assetType     String   @map("asset_type") // 'stock', 'bond', 'crypto', 'cash', 'other'
  symbol        String?  // 株式コード
  name          String
  quantity      Decimal  @db.Decimal(18, 8)
  purchasePrice Decimal  @map("purchase_price") @db.Decimal(18, 2)
  currentPrice  Decimal  @map("current_price") @db.Decimal(18, 2)
  currency      String   @default("JPY")
  notes         String?
  purchaseDate  DateTime @map("purchase_date")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  profile       Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  @@map("assets")
}